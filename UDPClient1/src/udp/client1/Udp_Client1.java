/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package udp.client1;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.FileReader;
import java.io.InputStream;
import java.io.OutputStream;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.JFileChooser;
import javax.swing.JList;
import javax.swing.JOptionPane;
import javax.swing.ListModel;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.InputStream;
import java.util.Scanner;
import javazoom.jl.player.advanced.AdvancedPlayer;

/**
 *
 * @author Administrator
 */
public class Udp_Client1 extends javax.swing.JFrame {
    private final int INSERT = 1;
    private String folderPath = "d:/Node1/Node1FileShare/";
    private String folderPathDownload = "d:/Node1/Node1Download/";
    private String SelectedName = "";
    
    /**
     * Creates new form Udp_Client1
     */
    
    public void setFolderPath(String folderLink) {
        this.folderPath = folderLink;
    }
    public String getFolderPath() {
        return this.folderPath;
    }
    public void setFolderPathDownload(String folderLink) {
        this.folderPathDownload = folderLink;
    }
    public String getFolderPathDownload(){
        return this.folderPathDownload;
    }
    public String getSelectedName() {
        return this.SelectedName;
    }
    public void setSelectedName(String name) {
        this.SelectedName = name;
    }
    public Udp_Client1() {
        
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        jPaneMain = new javax.swing.JPanel();
        jPanelTop = new javax.swing.JPanel();
        lbTitle = new javax.swing.JLabel();
        jPanelMid = new javax.swing.JPanel();
        lbAddressOnline = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jListAddress = new javax.swing.JList<>();
        lbFileName = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jListFileName = new javax.swing.JList<>();
        btnUpdate = new javax.swing.JButton();
        btnInsert = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        jPanelBottom = new javax.swing.JPanel();
        lbFileHeThong = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jListFileHeThong = new javax.swing.JList<>();
        lbFileDaTai = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        jListFileDaTai = new javax.swing.JList<>();
        btnDownload = new javax.swing.JButton();
        btnPlay = new javax.swing.JButton();
        tfSearch = new javax.swing.JTextField();
        btnSearch = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        lbTitle.setFont(new java.awt.Font("VNI-Ariston", 3, 36)); // NOI18N
        lbTitle.setForeground(new java.awt.Color(255, 0, 51));
        lbTitle.setText("Peer To Peer");

        javax.swing.GroupLayout jPanelTopLayout = new javax.swing.GroupLayout(jPanelTop);
        jPanelTop.setLayout(jPanelTopLayout);
        jPanelTopLayout.setHorizontalGroup(
            jPanelTopLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelTopLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lbTitle)
                .addGap(222, 222, 222))
        );
        jPanelTopLayout.setVerticalGroup(
            jPanelTopLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelTopLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lbTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 45, Short.MAX_VALUE)
                .addContainerGap())
        );

        lbAddressOnline.setFont(new java.awt.Font("Times New Roman", 3, 14)); // NOI18N
        lbAddressOnline.setForeground(new java.awt.Color(0, 102, 102));
        lbAddressOnline.setText("IP Address Online");

        jListAddress.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        jScrollPane1.setViewportView(jListAddress);

        lbFileName.setFont(new java.awt.Font("Times New Roman", 3, 14)); // NOI18N
        lbFileName.setForeground(new java.awt.Color(0, 102, 102));
        lbFileName.setText("Danh Sách File Đang Chia Sẻ");

        jListFileName.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        jScrollPane2.setViewportView(jListFileName);

        btnUpdate.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        btnUpdate.setText("Update");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        btnInsert.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        btnInsert.setText("Insert");
        btnInsert.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnInsertActionPerformed(evt);
            }
        });

        btnDelete.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        btnDelete.setText("Delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelMidLayout = new javax.swing.GroupLayout(jPanelMid);
        jPanelMid.setLayout(jPanelMidLayout);
        jPanelMidLayout.setHorizontalGroup(
            jPanelMidLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelMidLayout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(jPanelMidLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lbAddressOnline)
                    .addGroup(jPanelMidLayout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 227, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanelMidLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lbFileName)
                    .addGroup(jPanelMidLayout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 223, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanelMidLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnDelete, javax.swing.GroupLayout.DEFAULT_SIZE, 72, Short.MAX_VALUE)
                            .addComponent(btnInsert, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap())
        );
        jPanelMidLayout.setVerticalGroup(
            jPanelMidLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelMidLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelMidLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbAddressOnline)
                    .addComponent(lbFileName))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelMidLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnUpdate)
                    .addGroup(jPanelMidLayout.createSequentialGroup()
                        .addComponent(btnInsert)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnDelete))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 97, Short.MAX_VALUE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addContainerGap(24, Short.MAX_VALUE))
        );

        lbFileHeThong.setFont(new java.awt.Font("Times New Roman", 3, 14)); // NOI18N
        lbFileHeThong.setForeground(new java.awt.Color(0, 102, 102));
        lbFileHeThong.setText("Danh Sách File Trên Hệ Thống");

        jListFileHeThong.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        jScrollPane3.setViewportView(jListFileHeThong);

        lbFileDaTai.setFont(new java.awt.Font("Times New Roman", 3, 14)); // NOI18N
        lbFileDaTai.setForeground(new java.awt.Color(0, 102, 102));
        lbFileDaTai.setText("Danh Sách File Đã Tải Về");

        jListFileDaTai.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        jScrollPane4.setViewportView(jListFileDaTai);

        btnDownload.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        btnDownload.setText("Download");

        btnPlay.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        btnPlay.setText("Play");
        btnPlay.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPlayActionPerformed(evt);
            }
        });

        tfSearch.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        tfSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfSearchActionPerformed(evt);
            }
        });

        btnSearch.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        btnSearch.setText("Search");
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelBottomLayout = new javax.swing.GroupLayout(jPanelBottom);
        jPanelBottom.setLayout(jPanelBottomLayout);
        jPanelBottomLayout.setHorizontalGroup(
            jPanelBottomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelBottomLayout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(jPanelBottomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanelBottomLayout.createSequentialGroup()
                        .addComponent(tfSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 227, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnSearch, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(lbFileHeThong, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanelBottomLayout.createSequentialGroup()
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 227, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnDownload)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 31, Short.MAX_VALUE)
                .addGroup(jPanelBottomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelBottomLayout.createSequentialGroup()
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 222, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnPlay, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(lbFileDaTai)))
        );
        jPanelBottomLayout.setVerticalGroup(
            jPanelBottomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelBottomLayout.createSequentialGroup()
                .addGroup(jPanelBottomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbFileHeThong)
                    .addComponent(lbFileDaTai))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelBottomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnDownload)
                    .addComponent(btnPlay)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 122, Short.MAX_VALUE)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(jPanelBottomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnSearch)
                    .addComponent(tfSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(35, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPaneMainLayout = new javax.swing.GroupLayout(jPaneMain);
        jPaneMain.setLayout(jPaneMainLayout);
        jPaneMainLayout.setHorizontalGroup(
            jPaneMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPaneMainLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPaneMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanelMid, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPaneMainLayout.createSequentialGroup()
                        .addGroup(jPaneMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanelTop, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanelBottom, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addContainerGap())))
        );
        jPaneMainLayout.setVerticalGroup(
            jPaneMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPaneMainLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanelTop, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanelMid, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanelBottom, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPaneMain, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPaneMain, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>                        

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {                                          
        // TODO add your handling code here:
        updateAddress();
    }                                         

    private void btnInsertActionPerformed(java.awt.event.ActionEvent evt) {                                          
        // TODO add your handling code here:
        operationInsert("Open afile", 1);
    }                                         

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {                                          
        // TODO add your handling code here:
        operationDeleted();
    }                                         

    private void btnPlayActionPerformed(java.awt.event.ActionEvent evt) {                                        
        // TODO add your handling code here:
        operationPlay();
    }                                       

    private void tfSearchActionPerformed(java.awt.event.ActionEvent evt) {                                         
        // TODO add your handling code here:
    }                                        

    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {                                          
        // TODO add your handling code here:
        operationSearch();
    }                                         

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Udp_Client1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Udp_Client1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Udp_Client1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Udp_Client1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            
            public void run() {
                try {
                    UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
                } catch (ClassNotFoundException ex) {
                    Logger.getLogger(Udp_Client1.class.getName()).log(Level.SEVERE, null, ex);
                } catch (InstantiationException ex) {
                    Logger.getLogger(Udp_Client1.class.getName()).log(Level.SEVERE, null, ex);
                } catch (IllegalAccessException ex) {
                    Logger.getLogger(Udp_Client1.class.getName()).log(Level.SEVERE, null, ex);
                } catch (UnsupportedLookAndFeelException ex) {
                    Logger.getLogger(Udp_Client1.class.getName()).log(Level.SEVERE, null, ex);
                }
                
                Udp_Client1 udp = new Udp_Client1();
                udp.setVisible(true);
                udp.setTitle("Peer To Peer");
                udp.loadAddress("d:/Node1/node.txt");
                udp.loadFile(udp.getFolderPath(),udp.jListFileName);
                udp.loadFile(udp.getFolderPathDownload(),udp.jListFileDaTai);
                
            }
                
            
        });
    }

    // Variables declaration - do not modify                     
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnDownload;
    private javax.swing.JButton btnInsert;
    private javax.swing.JButton btnPlay;
    private javax.swing.JButton btnSearch;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JList<String> jListAddress;
    private javax.swing.JList<String> jListFileDaTai;
    private javax.swing.JList<String> jListFileHeThong;
    private javax.swing.JList<String> jListFileName;
    private javax.swing.JPanel jPaneMain;
    private javax.swing.JPanel jPanelBottom;
    private javax.swing.JPanel jPanelMid;
    private javax.swing.JPanel jPanelTop;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JLabel lbAddressOnline;
    private javax.swing.JLabel lbFileDaTai;
    private javax.swing.JLabel lbFileHeThong;
    private javax.swing.JLabel lbFileName;
    private javax.swing.JLabel lbTitle;
    private javax.swing.JTextField tfSearch;
    // End of variables declaration                   

    private void updateAddress() {
        //throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
        String x = jListAddress.getSelectedValue();
        System.out.println(x);
        ListModel a = jListAddress.getModel();
        
        for(int i=0; i<a.getSize(); i++) {
            System.out.println(a.getElementAt(i));
        }
    }
    public void loadAddress (String file) {
        try {
                    FileReader fr =  new FileReader(file);
                    BufferedReader br = new BufferedReader(fr);
                    DefaultListModel model = new DefaultListModel();
                    String title = "NODE Port";
                    model.addElement(title);
                    String line ="";
                    while((line = br.readLine())!=null) {
                        model.addElement(line);
                    }
                    jListAddress.setModel(model);
                    fr.close();
                    br.close();
                }
                catch (Exception e) {
                    System.out.println(e.toString());
                }
    }
    public void loadFile(String folderPath, JList jListName) {
        File folder = new File(folderPath);
        File[] listOfFiles = folder.listFiles();
        //List<String> results = new ArrayList<String>();
        DefaultListModel model = new DefaultListModel();
        for (int i = 0; i < listOfFiles.length; i++) {
          if (listOfFiles[i].isFile()) {
            //System.out.println("File " + listOfFiles[i].getName());
            model.addElement(listOfFiles[i].getName());
          } else if (listOfFiles[i].isDirectory()) {
            //System.out.println("Directory " + listOfFiles[i].getName());
          }
        }
        jListName.setModel(model);
    }
    public void operationInsert(String title, int type){
        JFileChooser chooser = new JFileChooser();
        chooser.setDialogTitle(title);
        int choose = 0;
        switch(type) {
            case INSERT:
                choose = chooser.showOpenDialog(null);
                break;
        }
        if(choose == JFileChooser.APPROVE_OPTION) {
            File file = chooser.getSelectedFile();
            switch(type) {
                case INSERT:
                    insertFile(file,folderPath);
                    break;
            }
        }
    }

    private void insertFile(File file, String folderPath) {
        //throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
        InputStream is = null;
        OutputStream os = null;
        try {
            //File aFile = new File("AFile.txt");
            String fileName = file.getName();
            String filePath = folderPath + fileName;
            //System.out.println(filePath);
            
            File bFile = new File(filePath);
            
            is = new FileInputStream(file);
            os = new FileOutputStream(bFile);
            
            byte[] buffer = new byte[1024];
            int length;
            // copy the file content in bytes
            while ((length = is.read(buffer)) > 0) {
                os.write(buffer, 0, length);
            }
            
            is.close();
            os.close();
            loadFile(folderPath,jListFileName);
            //System.out.println("Fileopied successfull!");
            
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
    public void operationDeleted(){
        String fileName = jListFileName.getSelectedValue();
        File file = new File(folderPath+fileName);
        file.delete();
        loadFile(folderPath,jListFileName);
    }

    public void operationPlay() {
        //throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
//        String fileName = jListFileDaTai.getSelectedValue();
//        String filePath = folderPathDownload + fileName;
//
//        try{
//            //InputStream in = getClass().getResourceAsStream("../playmp3/a.mp3"); // lấy InputStream của file nhạc
//            //InputStream in = getClass().getResourceAsStream("d:/node1download/a.mp3"); // lấy InputStream của file nhạc
//            InputStream in = null;
//            File file = new File(filePath);
//            in = new FileInputStream(file);
//            AdvancedPlayer play = new AdvancedPlayer(in); // tạo ra 1 đối tượng AdvancedPlay với tham số truyền vào là một InputStream
//            play.play(); // bắt đầu chơi nhạc
//
//          
//        }catch(Exception ex){
//            System.out.println(ex.toString());
//        }
          this.setSelectedName(jListFileDaTai.getSelectedValue());
          Playmp3 mp3 = new Playmp3(this);
          mp3.setVisible(true);
    }
    public void operationSearch() {
       String fileName = tfSearch.getText();
       
        try {
            FileReader fr = new FileReader("d:/Node1");
            BufferedReader br = new BufferedReader(fr);
            ArrayList<String> list =  new ArrayList<>();
            String line = "";
            while((line = br.readLine())!=null){
                
            }
        } catch (IOException ex) {
            System.out.println(ex.toString());
        }
    }
}
